name: Tag creation
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Get-Commit-Name:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get commit name
        run: |
          COMMIT_NAME=$(git log -1 --pretty=format:'%s')
          echo $COMMIT_NAME
          echo "commit_name=$COMMIT_NAME" > commit_name.txt
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: commit-name
          path: commit_name.txt

  Create-Tag:
    needs: Get-Commit-Name
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: commit-name
      - name: Set commit name
        run: echo "$(cat commit_name.txt)" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0 # steps.previoustag.outputs.tag
      - name: Get increment from commit name
        id: github-script
        uses: actions/github-script@v2.1.0
        with:
            script: |
                const commitName = process.env.commit_name;
                console.log(`Commit name: ${commitName}`);
                
                // Get the previous version and split it into major, minor, and patch
                const previousVersion = "${{ steps.previoustag.outputs.tag }}".split('.').map(Number);
                let [major, minor, patch] = previousVersion;
        
                // Determine the increment based on the commit name
                let incrementType = "";
                if (commitName.startsWith("fix:")) {
                    patch += 1; // Increment patch
                    incrementType = "patch";
                } else if (commitName.startsWith("feat:")) {
                    minor += 1; // Increment minor and reset patch to 0
                    patch = 0;
                    incrementType = "minor";
                } else if (commitName.startsWith("BREAKING CHANGE:")) {
                    major += 1; // Increment major and reset minor and patch to 0
                    minor = 0;
                    patch = 0;
                    incrementType = "major";
                }

                const newVersion = `v${major}.${minor}.${patch}`;
                
                core.setOutput("newVersion", newVersion);

                if(incrementType != "")
                    core.setOutput("makeRelease", true);
                else
                    core.setOutput("makeRelease", false)

                console.log(`Increment: ${incrementType}`);
                console.log(`New version: ${newVersion}`);

      - name: Release?
        if: steps.github-script.outputs.makeRelease
        run:
            echo 'Release ðŸ”¥ ?'
